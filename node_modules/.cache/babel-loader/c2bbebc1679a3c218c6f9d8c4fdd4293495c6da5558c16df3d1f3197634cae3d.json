{"ast":null,"code":"var _jsxFileName = \"/Users/arushidodhia/Desktop/252textbook/addandsubtract/src/BinaryOperations.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BinaryOperations() {\n  _s();\n  const {\n    operation\n  } = useParams();\n  const navigate = useNavigate();\n  const [binary1, setBinary1] = useState(\"\");\n  const [binary2, setBinary2] = useState(\"\");\n  const [steps, setSteps] = useState([]);\n  const [result, setResult] = useState(\"\");\n  useEffect(() => {\n    if (!operation) {\n      navigate(\"/\");\n    }\n  }, [operation, navigate]);\n  const add = (binary1, binary2) => {\n    if (!/^[01]+$/.test(binary1) || !/^[01]+$/.test(binary2)) {\n      return {\n        result: \"Invalid binary input\",\n        steps: []\n      };\n    }\n    const maxLength = Math.max(binary1.length, binary2.length);\n    binary1 = binary1.padStart(maxLength, \"0\");\n    binary2 = binary2.padStart(maxLength, \"0\");\n    let carry = 0;\n    let result = \"\";\n    let steps = [];\n    for (let i = maxLength - 1; i >= 0; i--) {\n      const bit1 = parseInt(binary1[i], 10);\n      const bit2 = parseInt(binary2[i], 10);\n      const sum = bit1 + bit2 + carry;\n      result = sum % 2 + result;\n      carry = Math.floor(sum / 2);\n      steps.push(`Step ${maxLength - i}: ${binary1[i]} + ${binary2[i]} + carry(${carry}) = ${sum} -> result: ${result}`);\n    }\n    if (carry > 0) {\n      result = carry + result;\n      steps.push(`Final carry: ${carry}, result: ${result}`);\n    }\n    return {\n      result,\n      steps\n    };\n  };\n  const subtract = (binary1, binary2) => {\n    if (!/^[01]+$/.test(binary1) || !/^[01]+$/.test(binary2)) {\n      return {\n        result: \"Invalid binary input\",\n        steps: []\n      };\n    }\n    const maxLength = Math.max(binary1.length, binary2.length);\n    binary1 = binary1.padStart(maxLength, \"0\");\n    binary2 = binary2.padStart(maxLength, \"0\");\n    let borrow = 0;\n    let result = \"\";\n    let steps = [];\n    for (let i = maxLength - 1; i >= 0; i--) {\n      let bit1 = parseInt(binary1[i], 10);\n      let bit2 = parseInt(binary2[i], 10);\n      bit1 -= borrow;\n      if (bit1 < bit2) {\n        bit1 += 2;\n        borrow = 1;\n      } else {\n        borrow = 0;\n      }\n      result = bit1 - bit2 + result;\n      steps.push(`Step ${maxLength - i}: ${binary1[i]} - ${binary2[i]} - borrow(${borrow}) = ${bit1 - bit2} -> result: ${result}`);\n    }\n    return {\n      result,\n      steps\n    };\n  };\n  const handleOperation = () => {\n    if (!binary1 || !binary2) {\n      alert(\"Please enter both binary numbers\");\n      return;\n    }\n    let response = {};\n    if (operation === \"addition\") {\n      response = add(binary1, binary2);\n    } else if (operation === \"subtraction\") {\n      response = subtract(binary1, binary2);\n    }\n    setSteps(response.steps);\n    setResult(response.result);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          .container {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            padding: 20px;\n            background-color: #f9f9f9;\n            border-radius: 10px;\n            max-width: 600px;\n            margin: 0 auto;\n            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n          }\n          .back-button {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            width: 100%;\n            margin-bottom: 20px;\n          }\n          .back-button-link {\n            display: flex;\n            align-items: center;\n            background-color: #e5e5e5;\n            border: none;\n            border-radius: 8px;\n            padding: 10px 15px;\n            cursor: pointer;\n            transition: transform 0.2s ease, background-color 0.2s ease;\n          }\n          .back-button-link:hover {\n            background-color: #d4d4d4;\n            transform: scale(1.02);\n          }\n          .input-container {\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            gap: 15px;\n            width: 100%;\n            margin-bottom: 15px;\n          }\n          .input-container input {\n            width: 100%;\n            padding: 10px;\n            border: 1px solid #d1d5db;\n            border-radius: 8px;\n            font-size: 16px;\n          }\n          .calculate-button {\n            width: 100%;\n            padding: 15px;\n            background-color: #e5e5e5;\n            border: none;\n            border-radius: 8px;\n            cursor: pointer;\n            font-size: 16px;\n            font-weight: bold;\n            color: #333;\n            transition: transform 0.2s ease, background-color 0.2s ease;\n          }\n          .calculate-button:hover {\n            background-color: #d4d4d4;\n            transform: scale(1.02);\n          }\n          .result-container {\n            width: 100%;\n            margin-top: 20px;\n            background-color: #e5e5e5;\n            border-radius: 8px;\n            padding: 15px;\n          }\n          .result-steps {\n            background-color: white;\n            border-radius: 6px;\n            padding: 10px;\n            margin-bottom: 15px;\n            max-height: 200px;\n            overflow-y: auto;\n          }\n          .result-output {\n            background-color: white;\n            border-radius: 6px;\n            padding: 10px;\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"back-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/'),\n          className: \"back-button-link\",\n          children: \"\\u2190 Back to Operations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [operation.charAt(0).toUpperCase() + operation.slice(1), \" Operation\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: binary1,\n          onChange: e => setBinary1(e.target.value),\n          placeholder: \"First Binary Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: binary2,\n          onChange: e => setBinary2(e.target.value),\n          placeholder: \"Second Binary Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleOperation,\n        className: \"calculate-button\",\n        children: [\"Calculate \", operation.charAt(0).toUpperCase() + operation.slice(1)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-steps\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Calculation Steps:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: step\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-output\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Result:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: result\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(BinaryOperations, \"vdXipjjxmmoj+q6BtSr0Ns4dbIg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = BinaryOperations;\nvar _c;\n$RefreshReg$(_c, \"BinaryOperations\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","BinaryOperations","_s","operation","navigate","binary1","setBinary1","binary2","setBinary2","steps","setSteps","result","setResult","add","test","maxLength","Math","max","length","padStart","carry","i","bit1","parseInt","bit2","sum","floor","push","subtract","borrow","handleOperation","alert","response","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","charAt","toUpperCase","slice","type","value","onChange","e","target","placeholder","map","step","index","_c","$RefreshReg$"],"sources":["/Users/arushidodhia/Desktop/252textbook/addandsubtract/src/BinaryOperations.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nexport default function BinaryOperations() {\n  const { operation } = useParams();\n  const navigate = useNavigate();\n\n  const [binary1, setBinary1] = useState(\"\");\n  const [binary2, setBinary2] = useState(\"\");\n  const [steps, setSteps] = useState([]);\n  const [result, setResult] = useState(\"\");\n\n  useEffect(() => {\n    if (!operation) {\n      navigate(\"/\");\n    }\n  }, [operation, navigate]);\n\n  const add = (binary1, binary2) => {    \n    if (!/^[01]+$/.test(binary1) || !/^[01]+$/.test(binary2)) {     \n      return { result: \"Invalid binary input\", steps: [] };   \n    }    \n    const maxLength = Math.max(binary1.length, binary2.length);   \n    binary1 = binary1.padStart(maxLength, \"0\");   \n    binary2 = binary2.padStart(maxLength, \"0\");    \n    \n    let carry = 0;   \n    let result = \"\";   \n    let steps = [];    \n    \n    for (let i = maxLength - 1; i >= 0; i--) {     \n      const bit1 = parseInt(binary1[i], 10);     \n      const bit2 = parseInt(binary2[i], 10);     \n      const sum = bit1 + bit2 + carry;          \n      result = (sum % 2) + result;\n      carry = Math.floor(sum / 2);     \n      steps.push(`Step ${maxLength - i}: ${binary1[i]} + ${binary2[i]} + carry(${carry}) = ${sum} -> result: ${result}`);   \n    }    \n    \n    if (carry > 0) {     \n      result = carry + result;     \n      steps.push(`Final carry: ${carry}, result: ${result}`);   \n    }    \n    \n    return { result, steps }; \n  }\n\n  const subtract = (binary1, binary2) => {    \n    if (!/^[01]+$/.test(binary1) || !/^[01]+$/.test(binary2)) {     \n      return { result: \"Invalid binary input\", steps: [] };   \n    }    \n    \n    const maxLength = Math.max(binary1.length, binary2.length);   \n    binary1 = binary1.padStart(maxLength, \"0\");   \n    binary2 = binary2.padStart(maxLength, \"0\");    \n    \n    let borrow = 0;   \n    let result = \"\";   \n    let steps = [];    \n    \n    for (let i = maxLength - 1; i >= 0; i--) {     \n      let bit1 = parseInt(binary1[i], 10);     \n      let bit2 = parseInt(binary2[i], 10);      \n      bit1 -= borrow;       \n      \n      if (bit1 < bit2) {       \n        bit1 += 2;        \n        borrow = 1;     \n      } else {       \n        borrow = 0;     \n      }      \n      \n      result = (bit1 - bit2) + result;      \n      steps.push(`Step ${maxLength - i}: ${binary1[i]} - ${binary2[i]} - borrow(${borrow}) = ${bit1 - bit2} -> result: ${result}`);   \n    }    \n    \n    return { result, steps }; \n  }\n\n  const handleOperation = () => {\n    if (!binary1 || !binary2) {\n      alert(\"Please enter both binary numbers\");\n      return;\n    }\n\n    let response = {};\n    if (operation === \"addition\") {\n      response = add(binary1, binary2);\n    } else if (operation === \"subtraction\") {\n      response = subtract(binary1, binary2);\n    }\n\n    setSteps(response.steps);\n    setResult(response.result);\n  };\n\n  return (\n    <>\n      <style>\n        {`\n          .container {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            padding: 20px;\n            background-color: #f9f9f9;\n            border-radius: 10px;\n            max-width: 600px;\n            margin: 0 auto;\n            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n          }\n          .back-button {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            width: 100%;\n            margin-bottom: 20px;\n          }\n          .back-button-link {\n            display: flex;\n            align-items: center;\n            background-color: #e5e5e5;\n            border: none;\n            border-radius: 8px;\n            padding: 10px 15px;\n            cursor: pointer;\n            transition: transform 0.2s ease, background-color 0.2s ease;\n          }\n          .back-button-link:hover {\n            background-color: #d4d4d4;\n            transform: scale(1.02);\n          }\n          .input-container {\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            gap: 15px;\n            width: 100%;\n            margin-bottom: 15px;\n          }\n          .input-container input {\n            width: 100%;\n            padding: 10px;\n            border: 1px solid #d1d5db;\n            border-radius: 8px;\n            font-size: 16px;\n          }\n          .calculate-button {\n            width: 100%;\n            padding: 15px;\n            background-color: #e5e5e5;\n            border: none;\n            border-radius: 8px;\n            cursor: pointer;\n            font-size: 16px;\n            font-weight: bold;\n            color: #333;\n            transition: transform 0.2s ease, background-color 0.2s ease;\n          }\n          .calculate-button:hover {\n            background-color: #d4d4d4;\n            transform: scale(1.02);\n          }\n          .result-container {\n            width: 100%;\n            margin-top: 20px;\n            background-color: #e5e5e5;\n            border-radius: 8px;\n            padding: 15px;\n          }\n          .result-steps {\n            background-color: white;\n            border-radius: 6px;\n            padding: 10px;\n            margin-bottom: 15px;\n            max-height: 200px;\n            overflow-y: auto;\n          }\n          .result-output {\n            background-color: white;\n            border-radius: 6px;\n            padding: 10px;\n          }\n        `}\n      </style>\n      <div className=\"container\">\n        <div className=\"back-button\">\n          <button \n            onClick={() => navigate('/')}\n            className=\"back-button-link\"\n          >\n            ← Back to Operations\n          </button>\n          <h2>{operation.charAt(0).toUpperCase() + operation.slice(1)} Operation</h2>\n        </div>\n\n        <div className=\"input-container\">\n          <input \n            type=\"text\" \n            value={binary1} \n            onChange={(e) => setBinary1(e.target.value)}\n            placeholder=\"First Binary Number\"\n          />\n          <input \n            type=\"text\" \n            value={binary2} \n            onChange={(e) => setBinary2(e.target.value)}\n            placeholder=\"Second Binary Number\"\n          />\n        </div>\n\n        <button \n          onClick={handleOperation}\n          className=\"calculate-button\"\n        >\n          Calculate {operation.charAt(0).toUpperCase() + operation.slice(1)}\n        </button>\n\n        {result && (\n          <div className=\"result-container\">\n            <div className=\"result-steps\">\n              <h3>Calculation Steps:</h3>\n              {steps.map((step, index) => (\n                <div key={index}>{step}</div>\n              ))}\n            </div>\n            <div className=\"result-output\">\n              <h3>Result:</h3>\n              <div>{result}</div>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}