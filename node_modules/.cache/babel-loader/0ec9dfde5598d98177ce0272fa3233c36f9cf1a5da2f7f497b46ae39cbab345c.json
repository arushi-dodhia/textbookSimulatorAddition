{"ast":null,"code":"var _jsxFileName = \"/Users/arushidodhia/Desktop/252textbook/addandsubtract/src/BinaryOperations.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BinaryOperations() {\n  _s();\n  const {\n    operation\n  } = useParams();\n  const navigate = useNavigate();\n  const [binary1, setBinary1] = useState(\"\");\n  const [binary2, setBinary2] = useState(\"\");\n  const [steps, setSteps] = useState([]);\n  const [result, setResult] = useState(\"\");\n  useEffect(() => {\n    if (!operation) {\n      navigate(\"/\");\n    }\n  }, [operation, navigate]);\n  const add = (binary1, binary2) => {\n    if (!/^[01]+$/.test(binary1) || !/^[01]+$/.test(binary2)) {\n      return {\n        result: \"Invalid binary input\",\n        steps: []\n      };\n    }\n    const maxLength = Math.max(binary1.length, binary2.length);\n    binary1 = binary1.padStart(maxLength, \"0\");\n    binary2 = binary2.padStart(maxLength, \"0\");\n    let carry = 0;\n    let result = \"\";\n    let steps = [];\n    for (let i = maxLength - 1; i >= 0; i--) {\n      const bit1 = parseInt(binary1[i], 10);\n      const bit2 = parseInt(binary2[i], 10);\n      const sum = bit1 + bit2 + carry;\n      result = sum % 2 + result;\n      carry = Math.floor(sum / 2);\n      steps.push(`Step ${maxLength - i}: ${binary1[i]} + ${binary2[i]} + carry(${carry}) = ${sum} -> result: ${result}`);\n    }\n    if (carry > 0) {\n      result = carry + result;\n      steps.push(`Final carry: ${carry}, result: ${result}`);\n    }\n    return {\n      result,\n      steps\n    };\n  };\n  const subtract = (binary1, binary2) => {\n    if (!/^[01]+$/.test(binary1) || !/^[01]+$/.test(binary2)) {\n      return {\n        result: \"Invalid binary input\",\n        steps: []\n      };\n    }\n    const maxLength = Math.max(binary1.length, binary2.length);\n    binary1 = binary1.padStart(maxLength, \"0\");\n    binary2 = binary2.padStart(maxLength, \"0\");\n    let borrow = 0;\n    let result = \"\";\n    let steps = [];\n    for (let i = maxLength - 1; i >= 0; i--) {\n      let bit1 = parseInt(binary1[i], 10);\n      let bit2 = parseInt(binary2[i], 10);\n      bit1 -= borrow;\n      if (bit1 < bit2) {\n        bit1 += 2;\n        borrow = 1;\n      } else {\n        borrow = 0;\n      }\n      result = bit1 - bit2 + result;\n      steps.push(`Step ${maxLength - i}: ${binary1[i]} - ${binary2[i]} - borrow(${borrow}) = ${bit1 - bit2} -> result: ${result}`);\n    }\n    return {\n      result,\n      steps\n    };\n  };\n  const handleOperation = () => {\n    if (!binary1 || !binary2) {\n      alert(\"Please enter both binary numbers\");\n      return;\n    }\n    let response = {};\n    if (operation === \"addition\") {\n      response = add(binary1, binary2);\n    } else if (operation === \"subtraction\") {\n      response = subtract(binary1, binary2);\n    }\n    setSteps(response.steps);\n    setResult(response.result);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        className: \"bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded\",\n        children: \"\\u2190 Back to Operations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold capitalize\",\n        children: [operation, \" Operation\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block mb-2 font-bold\",\n            children: \"First Binary Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: binary1,\n            onChange: e => setBinary1(e.target.value),\n            className: \"w-full p-2 border rounded\",\n            placeholder: \"Enter first binary number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block mb-2 font-bold\",\n            children: \"Second Binary Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: binary2,\n            onChange: e => setBinary2(e.target.value),\n            className: \"w-full p-2 border rounded\",\n            placeholder: \"Enter second binary number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleOperation,\n        className: \"w-full bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded\",\n        children: [\"Calculate \", operation.charAt(0).toUpperCase() + operation.slice(1)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 bg-blue-100 p-4 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-bold mb-2\",\n          children: \"Calculation Steps:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"bg-white p-2 rounded overflow-x-auto\",\n          children: steps.join(\"\\n\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-bold mt-4 mb-2\",\n          children: \"Result:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-2 rounded\",\n          children: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(BinaryOperations, \"vdXipjjxmmoj+q6BtSr0Ns4dbIg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = BinaryOperations;\nvar _c;\n$RefreshReg$(_c, \"BinaryOperations\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","BinaryOperations","_s","operation","navigate","binary1","setBinary1","binary2","setBinary2","steps","setSteps","result","setResult","add","test","maxLength","Math","max","length","padStart","carry","i","bit1","parseInt","bit2","sum","floor","push","subtract","borrow","handleOperation","alert","response","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","charAt","toUpperCase","slice","join","_c","$RefreshReg$"],"sources":["/Users/arushidodhia/Desktop/252textbook/addandsubtract/src/BinaryOperations.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nexport default function BinaryOperations() {\n  const { operation } = useParams();\n  const navigate = useNavigate();\n\n  const [binary1, setBinary1] = useState(\"\");\n  const [binary2, setBinary2] = useState(\"\");\n  const [steps, setSteps] = useState([]);\n  const [result, setResult] = useState(\"\");\n  useEffect(() => {\n    if (!operation) {\n      navigate(\"/\");\n    }\n  }, [operation, navigate]);\n\n  const add = (binary1, binary2) => {    \n    if (!/^[01]+$/.test(binary1) || !/^[01]+$/.test(binary2)) {     \n      return { result: \"Invalid binary input\", steps: [] };   \n    }    \n    const maxLength = Math.max(binary1.length, binary2.length);   \n    binary1 = binary1.padStart(maxLength, \"0\");   \n    binary2 = binary2.padStart(maxLength, \"0\");    \n    \n    let carry = 0;   \n    let result = \"\";   \n    let steps = [];    \n    \n    for (let i = maxLength - 1; i >= 0; i--) {     \n      const bit1 = parseInt(binary1[i], 10);     \n      const bit2 = parseInt(binary2[i], 10);     \n      const sum = bit1 + bit2 + carry;          \n      result = (sum % 2) + result;\n      carry = Math.floor(sum / 2);     \n      steps.push(`Step ${maxLength - i}: ${binary1[i]} + ${binary2[i]} + carry(${carry}) = ${sum} -> result: ${result}`);   \n    }    \n    \n    if (carry > 0) {     \n      result = carry + result;     \n      steps.push(`Final carry: ${carry}, result: ${result}`);   \n    }    \n    \n    return { result, steps }; \n  }\n\n  const subtract = (binary1, binary2) => {    \n    if (!/^[01]+$/.test(binary1) || !/^[01]+$/.test(binary2)) {     \n      return { result: \"Invalid binary input\", steps: [] };   \n    }    \n    \n    const maxLength = Math.max(binary1.length, binary2.length);   \n    binary1 = binary1.padStart(maxLength, \"0\");   \n    binary2 = binary2.padStart(maxLength, \"0\");    \n    \n    let borrow = 0;   \n    let result = \"\";   \n    let steps = [];    \n    \n    for (let i = maxLength - 1; i >= 0; i--) {     \n      let bit1 = parseInt(binary1[i], 10);     \n      let bit2 = parseInt(binary2[i], 10);      \n      bit1 -= borrow;       \n      \n      if (bit1 < bit2) {       \n        bit1 += 2;        \n        borrow = 1;     \n      } else {       \n        borrow = 0;     \n      }      \n      \n      result = (bit1 - bit2) + result;      \n      steps.push(`Step ${maxLength - i}: ${binary1[i]} - ${binary2[i]} - borrow(${borrow}) = ${bit1 - bit2} -> result: ${result}`);   \n    }    \n    \n    return { result, steps }; \n  }\n\n  const handleOperation = () => {\n    if (!binary1 || !binary2) {\n      alert(\"Please enter both binary numbers\");\n      return;\n    }\n\n    let response = {};\n    if (operation === \"addition\") {\n      response = add(binary1, binary2);\n    } else if (operation === \"subtraction\") {\n      response = subtract(binary1, binary2);\n    }\n\n    setSteps(response.steps);\n    setResult(response.result);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <button \n          onClick={() => navigate('/')}\n          className=\"bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded\"\n        >\n          ← Back to Operations\n        </button>\n        <h2 className=\"text-2xl font-bold capitalize\">{operation} Operation</h2>\n      </div>\n\n      <div className=\"space-y-4\">\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div>\n            <label className=\"block mb-2 font-bold\">First Binary Number:</label>\n            <input \n              type=\"text\" \n              value={binary1} \n              onChange={(e) => setBinary1(e.target.value)}\n              className=\"w-full p-2 border rounded\"\n              placeholder=\"Enter first binary number\"\n            />\n          </div>\n          <div>\n            <label className=\"block mb-2 font-bold\">Second Binary Number:</label>\n            <input \n              type=\"text\" \n              value={binary2} \n              onChange={(e) => setBinary2(e.target.value)}\n              className=\"w-full p-2 border rounded\"\n              placeholder=\"Enter second binary number\"\n            />\n          </div>\n        </div>\n\n        <button \n          onClick={handleOperation}\n          className=\"w-full bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded\"\n        >\n          Calculate {operation.charAt(0).toUpperCase() + operation.slice(1)}\n        </button>\n\n        {result && (\n          <div className=\"mt-6 bg-blue-100 p-4 rounded\">\n            <h3 className=\"font-bold mb-2\">Calculation Steps:</h3>\n            <pre className=\"bg-white p-2 rounded overflow-x-auto\">{steps.join(\"\\n\")}</pre>\n            <h3 className=\"font-bold mt-4 mb-2\">Result:</h3>\n            <div className=\"bg-white p-2 rounded\">{result}</div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}