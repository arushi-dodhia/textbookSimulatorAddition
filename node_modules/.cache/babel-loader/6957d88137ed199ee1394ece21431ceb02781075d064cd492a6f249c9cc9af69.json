{"ast":null,"code":"var _jsxFileName = \"/Users/arushidodhia/Desktop/252textbook/addandsubtract/src/BinaryOperations.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { calculateBinaryAddition, calculateBinarySubtraction } from './addorsubtract';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BinaryOperationSimulator() {\n  _s();\n  const [binary1, setBinary1] = useState(\"\");\n  const [binary2, setBinary2] = useState(\"\");\n  const [operation, setOperation] = useState(\"addition\");\n  const [steps, setSteps] = useState([]);\n  const [result, setResult] = useState(\"\");\n  const navigate = useNavigate();\n  const handleOperation = () => {\n    if (!binary1 || !binary2) {\n      alert(\"Please enter both binary numbers\");\n      return;\n    }\n    let steps = [];\n    let result = \"\";\n    if (operation === \"addition\") {\n      const response = calculateBinaryAddition(binary1, binary2);\n      steps = response.steps;\n      result = response.result;\n    } else if (operation === \"subtraction\") {\n      const response = calculateBinarySubtraction(binary1, binary2);\n      steps = response.steps;\n      result = response.result;\n    }\n\n    // Navigate to a page that shows the result\n    navigate(\"/\", {\n      state: {\n        result,\n        steps\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter First Binary Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: binary1,\n        onChange: e => setBinary1(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Second Binary Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: binary2,\n        onChange: e => setBinary2(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Operation:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: operation,\n        onChange: e => setOperation(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"addition\",\n          children: \"Addition\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"subtraction\",\n          children: \"Subtraction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOperation,\n      children: \"Calculate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Conversion Steps:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: steps.join(\"\\n\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(BinaryOperationSimulator, \"vTR4zftDcFGBoGeUosDgKo/PwjI=\", false, function () {\n  return [useNavigate];\n});\n_c = BinaryOperationSimulator;\nexport default BinaryOperationSimulator;\nvar _c;\n$RefreshReg$(_c, \"BinaryOperationSimulator\");","map":{"version":3,"names":["React","useState","calculateBinaryAddition","calculateBinarySubtraction","useNavigate","jsxDEV","_jsxDEV","BinaryOperationSimulator","_s","binary1","setBinary1","binary2","setBinary2","operation","setOperation","steps","setSteps","result","setResult","navigate","handleOperation","alert","response","state","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","style","marginTop","join","_c","$RefreshReg$"],"sources":["/Users/arushidodhia/Desktop/252textbook/addandsubtract/src/BinaryOperations.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { calculateBinaryAddition, calculateBinarySubtraction } from './addorsubtract';\nimport { useNavigate } from 'react-router-dom';\n\nfunction BinaryOperationSimulator() {\n  const [binary1, setBinary1] = useState(\"\");\n  const [binary2, setBinary2] = useState(\"\");\n  const [operation, setOperation] = useState(\"addition\");\n  const [steps, setSteps] = useState([]);\n  const [result, setResult] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  const handleOperation = () => {\n    if (!binary1 || !binary2) {\n      alert(\"Please enter both binary numbers\");\n      return;\n    }\n\n    let steps = [];\n    let result = \"\";\n\n    if (operation === \"addition\") {\n      const response = calculateBinaryAddition(binary1, binary2);\n      steps = response.steps;\n      result = response.result;\n    } else if (operation === \"subtraction\") {\n      const response = calculateBinarySubtraction(binary1, binary2);\n      steps = response.steps;\n      result = response.result;\n    }\n\n    // Navigate to a page that shows the result\n    navigate(\"/\", { state: { result, steps } });\n  };\n\n  return (\n    <div>\n      <div>\n        <label>Enter First Binary Number:</label>\n        <input\n          type=\"text\"\n          value={binary1}\n          onChange={(e) => setBinary1(e.target.value)}\n        />\n      </div>\n      <div>\n        <label>Enter Second Binary Number:</label>\n        <input\n          type=\"text\"\n          value={binary2}\n          onChange={(e) => setBinary2(e.target.value)}\n        />\n      </div>\n\n      <div>\n        <label>Select Operation:</label>\n        <select value={operation} onChange={(e) => setOperation(e.target.value)}>\n          <option value=\"addition\">Addition</option>\n          <option value=\"subtraction\">Subtraction</option>\n        </select>\n      </div>\n\n      <button onClick={handleOperation}>Calculate</button>\n\n      <div style={{ marginTop: \"20px\" }}>\n        <h3>Conversion Steps:</h3>\n        <pre>{steps.join(\"\\n\")}</pre>\n        <h3>Result:</h3>\n        <pre>{result}</pre>\n      </div>\n    </div>\n  );\n}\n\nexport default BinaryOperationSimulator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}