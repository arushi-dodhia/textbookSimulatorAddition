{"ast":null,"code":"var _jsxFileName = \"/Users/arushidodhia/Desktop/252textbook/addandsubtract/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { calculateBinaryAddition, calculateBinarySubtraction } from \"./addorsubtract\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BinaryOperationSimulator() {\n  _s();\n  const [binary1, setBinary1] = useState(\"\");\n  const [binary2, setBinary2] = useState(\"\");\n  const [operation, setOperation] = useState(\"addition\");\n  const [steps, setSteps] = useState([]);\n  const [result, setResult] = useState(\"\");\n  const handleOperation = () => {\n    if (!binary1 || !binary2) {\n      alert(\"Please enter both binary numbers\");\n      return;\n    }\n    let steps = [];\n    let result = \"\";\n    if (operation === \"addition\") {\n      const response = calculateBinaryAddition(binary1, binary2);\n      steps = response.steps;\n      result = response.result;\n    } else if (operation === \"subtraction\") {\n      const response = calculateBinarySubtraction(binary1, binary2);\n      steps = response.steps;\n      result = response.result;\n    }\n    setSteps(steps);\n    setResult(result);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: \"Arial, sans-serif\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Binary Operation Simulator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter First Binary Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: binary1,\n        onChange: e => setBinary1(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Second Binary Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: binary2,\n        onChange: e => setBinary2(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Operation:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: operation,\n        onChange: e => setOperation(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"addition\",\n          children: \"Addition\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"subtraction\",\n          children: \"Subtraction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOperation,\n      children: \"Calculate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Conversion Steps:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: steps.join(\"\\n\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(BinaryOperationSimulator, \"Z8HLqVwCx6YyHlWwVyA7R5TKLVI=\");\n_c = BinaryOperationSimulator;\nReactDOM.render(/*#__PURE__*/_jsxDEV(BinaryOperationSimulator, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 76,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\nvar _c;\n$RefreshReg$(_c, \"BinaryOperationSimulator\");","map":{"version":3,"names":["React","useState","ReactDOM","calculateBinaryAddition","calculateBinarySubtraction","jsxDEV","_jsxDEV","BinaryOperationSimulator","_s","binary1","setBinary1","binary2","setBinary2","operation","setOperation","steps","setSteps","result","setResult","handleOperation","alert","response","style","fontFamily","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","marginTop","join","_c","render","document","getElementById","$RefreshReg$"],"sources":["/Users/arushidodhia/Desktop/252textbook/addandsubtract/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { calculateBinaryAddition, calculateBinarySubtraction } from \"./addorsubtract\";\n\nfunction BinaryOperationSimulator() {\n  const [binary1, setBinary1] = useState(\"\");\n  const [binary2, setBinary2] = useState(\"\");\n  const [operation, setOperation] = useState(\"addition\");\n  const [steps, setSteps] = useState([]);\n  const [result, setResult] = useState(\"\");\n\n  const handleOperation = () => {\n    if (!binary1 || !binary2) {\n      alert(\"Please enter both binary numbers\");\n      return;\n    }\n\n    let steps = [];\n    let result = \"\";\n\n    if (operation === \"addition\") {\n      const response = calculateBinaryAddition(binary1, binary2);\n      steps = response.steps;\n      result = response.result;\n    } else if (operation === \"subtraction\") {\n      const response = calculateBinarySubtraction(binary1, binary2);\n      steps = response.steps;\n      result = response.result;\n    }\n\n    setSteps(steps);\n    setResult(result);\n  };\n\n  return (\n    <div style={{ fontFamily: \"Arial, sans-serif\", padding: \"20px\" }}>\n      <h1>Binary Operation Simulator</h1>\n\n      <div>\n        <label>Enter First Binary Number:</label>\n        <input\n          type=\"text\"\n          value={binary1}\n          onChange={(e) => setBinary1(e.target.value)}\n        />\n      </div>\n      <div>\n        <label>Enter Second Binary Number:</label>\n        <input\n          type=\"text\"\n          value={binary2}\n          onChange={(e) => setBinary2(e.target.value)}\n        />\n      </div>\n\n      <div>\n        <label>Select Operation:</label>\n        <select value={operation} onChange={(e) => setOperation(e.target.value)}>\n          <option value=\"addition\">Addition</option>\n          <option value=\"subtraction\">Subtraction</option>\n        </select>\n      </div>\n\n      <button onClick={handleOperation}>Calculate</button>\n\n      <div style={{ marginTop: \"20px\" }}>\n        <h3>Conversion Steps:</h3>\n        <pre>{steps.join(\"\\n\")}</pre>\n        <h3>Result:</h3>\n        <pre>{result}</pre>\n      </div>\n    </div>\n  );\n}\n\nReactDOM.render(<BinaryOperationSimulator />, document.getElementById(\"root\"));"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,WAAW;AAChC,SAASC,uBAAuB,EAAEC,0BAA0B,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtF,SAASC,wBAAwBA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,UAAU,CAAC;EACtD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMkB,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAACV,OAAO,IAAI,CAACE,OAAO,EAAE;MACxBS,KAAK,CAAC,kCAAkC,CAAC;MACzC;IACF;IAEA,IAAIL,KAAK,GAAG,EAAE;IACd,IAAIE,MAAM,GAAG,EAAE;IAEf,IAAIJ,SAAS,KAAK,UAAU,EAAE;MAC5B,MAAMQ,QAAQ,GAAGlB,uBAAuB,CAACM,OAAO,EAAEE,OAAO,CAAC;MAC1DI,KAAK,GAAGM,QAAQ,CAACN,KAAK;MACtBE,MAAM,GAAGI,QAAQ,CAACJ,MAAM;IAC1B,CAAC,MAAM,IAAIJ,SAAS,KAAK,aAAa,EAAE;MACtC,MAAMQ,QAAQ,GAAGjB,0BAA0B,CAACK,OAAO,EAAEE,OAAO,CAAC;MAC7DI,KAAK,GAAGM,QAAQ,CAACN,KAAK;MACtBE,MAAM,GAAGI,QAAQ,CAACJ,MAAM;IAC1B;IAEAD,QAAQ,CAACD,KAAK,CAAC;IACfG,SAAS,CAACD,MAAM,CAAC;EACnB,CAAC;EAED,oBACEX,OAAA;IAAKgB,KAAK,EAAE;MAAEC,UAAU,EAAE,mBAAmB;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC/DnB,OAAA;MAAAmB,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEnCvB,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,EAAO;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzCvB,OAAA;QACEwB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEtB,OAAQ;QACfuB,QAAQ,EAAGC,CAAC,IAAKvB,UAAU,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNvB,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,EAAO;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1CvB,OAAA;QACEwB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEpB,OAAQ;QACfqB,QAAQ,EAAGC,CAAC,IAAKrB,UAAU,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENvB,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,EAAO;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAChCvB,OAAA;QAAQyB,KAAK,EAAElB,SAAU;QAACmB,QAAQ,EAAGC,CAAC,IAAKnB,YAAY,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAN,QAAA,gBACtEnB,OAAA;UAAQyB,KAAK,EAAC,UAAU;UAAAN,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1CvB,OAAA;UAAQyB,KAAK,EAAC,aAAa;UAAAN,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENvB,OAAA;MAAQ6B,OAAO,EAAEhB,eAAgB;MAAAM,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEpDvB,OAAA;MAAKgB,KAAK,EAAE;QAAEc,SAAS,EAAE;MAAO,CAAE;MAAAX,QAAA,gBAChCnB,OAAA;QAAAmB,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BvB,OAAA;QAAAmB,QAAA,EAAMV,KAAK,CAACsB,IAAI,CAAC,IAAI;MAAC;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC7BvB,OAAA;QAAAmB,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBvB,OAAA;QAAAmB,QAAA,EAAMR;MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrB,EAAA,CArEQD,wBAAwB;AAAA+B,EAAA,GAAxB/B,wBAAwB;AAuEjCL,QAAQ,CAACqC,MAAM,cAACjC,OAAA,CAACC,wBAAwB;EAAAmB,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,EAAEW,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAAC,IAAAH,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}